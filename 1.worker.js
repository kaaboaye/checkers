self.webpackChunk([1],[function(n,e,t){"use strict";t.r(e);var r=t(4);t.d(e,"initialize",(function(){return r.g})),t.d(e,"getTiles",(function(){return r.e})),t.d(e,"getTurn",(function(){return r.f})),t.d(e,"getPossibleMoves",(function(){return r.d})),t.d(e,"movePawn",(function(){return r.i})),t.d(e,"makeAMove",(function(){return r.h})),t.d(e,"Tile",(function(){return r.a})),t.d(e,"__wbindgen_json_parse",(function(){return r.c})),t.d(e,"__wbg_log_c703a4c71dac371b",(function(){return r.b}))},,,,function(n,e,t){"use strict";(function(n){t.d(e,"g",(function(){return d})),t.d(e,"e",(function(){return a})),t.d(e,"f",(function(){return s})),t.d(e,"d",(function(){return b})),t.d(e,"i",(function(){return g})),t.d(e,"h",(function(){return p})),t.d(e,"a",(function(){return h})),t.d(e,"c",(function(){return w})),t.d(e,"b",(function(){return v}));var r=t(5);let u=new("undefined"==typeof TextDecoder?(0,n.require)("util").TextDecoder:TextDecoder)("utf-8",{ignoreBOM:!0,fatal:!0});u.decode();let i=null;function c(n,e){return u.decode((null!==i&&i.buffer===r.f.buffer||(i=new Uint8Array(r.f.buffer)),i).subarray(n,n+e))}const o=new Array(32).fill(void 0);o.push(void 0,null,!0,!1);let f=o.length;function d(){return 0!==r.d()}function l(n){const e=function(n){return o[n]}(n);return function(n){n<36||(o[n]=f,f=n)}(n),e}function a(){return l(r.b())}function s(){return l(r.c())}function b(n,e){return l(r.a(n,e))}function g(n,e,t,u){r.g(n,e,t,u)}function p(){r.e()}const h=Object.freeze({Nothing:0,RedPawn:1,RedQuin:2,BlackPawn:3,BlackQuin:4}),w=function(n,e){return function(n){f===o.length&&o.push(o.length+1);const e=f;return f=o[e],o[e]=n,e}(JSON.parse(c(n,e)))},v=function(n,e){console.log(c(n,e))}}).call(this,t(6)(n))},function(n,e,t){"use strict";var r=t.w[n.i];n.exports=r;t(4);r.h()},function(n,e){n.exports=function(n){if(!n.webpackPolyfill){var e=Object.create(n);e.children||(e.children=[]),Object.defineProperty(e,"loaded",{enumerable:!0,get:function(){return e.l}}),Object.defineProperty(e,"id",{enumerable:!0,get:function(){return e.i}}),Object.defineProperty(e,"exports",{enumerable:!0}),e.webpackPolyfill=1}return e}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9wa2cvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vcGtnL2luZGV4X2JnLmpzIiwid2VicGFjazovLy8od2VicGFjaykvYnVpbGRpbi9oYXJtb255LW1vZHVsZS5qcyJdLCJuYW1lcyI6WyJjYWNoZWRUZXh0RGVjb2RlciIsIlRleHREZWNvZGVyIiwibW9kdWxlIiwicmVxdWlyZSIsImlnbm9yZUJPTSIsImZhdGFsIiwiZGVjb2RlIiwiY2FjaGVnZXRVaW50OE1lbW9yeTAiLCJnZXRTdHJpbmdGcm9tV2FzbTAiLCJwdHIiLCJsZW4iLCJidWZmZXIiLCJVaW50OEFycmF5Iiwic3ViYXJyYXkiLCJoZWFwIiwiQXJyYXkiLCJmaWxsIiwidW5kZWZpbmVkIiwicHVzaCIsImhlYXBfbmV4dCIsImxlbmd0aCIsImluaXRpYWxpemUiLCJ0YWtlT2JqZWN0IiwiaWR4IiwicmV0IiwiZ2V0T2JqZWN0IiwiZHJvcE9iamVjdCIsImdldFRpbGVzIiwiZ2V0VHVybiIsImdldFBvc3NpYmxlTW92ZXMiLCJyb3ciLCJjb2wiLCJtb3ZlUGF3biIsImZyb21fcm93IiwiZnJvbV9jb2wiLCJ0b19yb3ciLCJ0b19jb2wiLCJtYWtlQU1vdmUiLCJUaWxlIiwiT2JqZWN0IiwiZnJlZXplIiwiTm90aGluZyIsIlJlZFBhd24iLCJSZWRRdWluIiwiQmxhY2tQYXduIiwiQmxhY2tRdWluIiwiX193YmluZGdlbl9qc29uX3BhcnNlIiwiYXJnMCIsImFyZzEiLCJvYmoiLCJhZGRIZWFwT2JqZWN0IiwiSlNPTiIsInBhcnNlIiwiX193YmdfbG9nX2M3MDNhNGM3MWRhYzM3MWIiLCJjb25zb2xlIiwibG9nIiwiZXhwb3J0cyIsIm9yaWdpbmFsTW9kdWxlIiwid2VicGFja1BvbHlmaWxsIiwiY3JlYXRlIiwiY2hpbGRyZW4iLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJnZXQiLCJsIiwiaSJdLCJtYXBwaW5ncyI6Im9EQUFBLDJiLGlDQ0FBLHlVQUlBLElBQUlBLEVBQW9CLElBRm9CLG9CQUFoQkMsYUFBOEIsRUFBSUMsRUFBT0MsU0FBUyxRQUFRRixZQUFjQSxhQUUzRCxRQUFTLENBQUVHLFdBQVcsRUFBTUMsT0FBTyxJQUU1RUwsRUFBa0JNLFNBRWxCLElBQUlDLEVBQXVCLEtBUTNCLFNBQVNDLEVBQW1CQyxFQUFLQyxHQUM3QixPQUFPVixFQUFrQk0sUUFQSSxPQUF6QkMsR0FBaUNBLEVBQXFCSSxTQUFXLElBQVlBLFNBQzdFSixFQUF1QixJQUFJSyxXQUFXLElBQVlELFNBRS9DSixHQUkyQ00sU0FBU0osRUFBS0EsRUFBTUMsSUFHMUUsTUFBTUksRUFBTyxJQUFJQyxNQUFNLElBQUlDLFVBQUtDLEdBRWhDSCxFQUFLSSxVQUFLRCxFQUFXLE1BQU0sR0FBTSxHQUVqQyxJQUFJRSxFQUFZTCxFQUFLTSxPQWFkLFNBQVNDLElBRVosT0FBZSxJQURMLE1BWWQsU0FBU0MsRUFBV0MsR0FDaEIsTUFBTUMsRUFUVixTQUFtQkQsR0FBTyxPQUFPVCxFQUFLUyxHQVN0QkUsQ0FBVUYsR0FFdEIsT0FUSixTQUFvQkEsR0FDWkEsRUFBTSxLQUNWVCxFQUFLUyxHQUFPSixFQUNaQSxFQUFZSSxHQUtaRyxDQUFXSCxHQUNKQyxFQUtKLFNBQVNHLElBRVosT0FBT0wsRUFERyxPQU9QLFNBQVNNLElBRVosT0FBT04sRUFERyxPQVNQLFNBQVNPLEVBQWlCQyxFQUFLQyxHQUVsQyxPQUFPVCxFQURHLElBQXNCUSxFQUFLQyxJQVVsQyxTQUFTQyxFQUFTQyxFQUFVQyxFQUFVQyxFQUFRQyxHQUNqRCxJQUFjSCxFQUFVQyxFQUFVQyxFQUFRQyxHQUt2QyxTQUFTQyxJQUNaLE1BS0csTUFBTUMsRUFBT0MsT0FBT0MsT0FBTyxDQUFFQyxRQUFRLEVBQUVDLFFBQVEsRUFBRUMsUUFBUSxFQUFFQyxVQUFVLEVBQUVDLFVBQVUsSUFFM0VDLEVBQXdCLFNBQVNDLEVBQU1DLEdBRWhELE9BN0VKLFNBQXVCQyxHQUNmOUIsSUFBY0wsRUFBS00sUUFBUU4sRUFBS0ksS0FBS0osRUFBS00sT0FBUyxHQUN2RCxNQUFNRyxFQUFNSixFQUlaLE9BSEFBLEVBQVlMLEVBQUtTLEdBRWpCVCxFQUFLUyxHQUFPMEIsRUFDTDFCLEVBdUVBMkIsQ0FER0MsS0FBS0MsTUFBTTVDLEVBQW1CdUMsRUFBTUMsTUFJckNLLEVBQTZCLFNBQVNOLEVBQU1DLEdBQ3JETSxRQUFRQyxJQUFJL0MsRUFBbUJ1QyxFQUFNQyxPLHNHQzNHekM5QyxFQUFPc0QsUUFBVSxTQUFTQyxHQUN6QixJQUFLQSxFQUFlQyxnQkFBaUIsQ0FDcEMsSUFBSXhELEVBQVNxQyxPQUFPb0IsT0FBT0YsR0FFdEJ2RCxFQUFPMEQsV0FBVTFELEVBQU8wRCxTQUFXLElBQ3hDckIsT0FBT3NCLGVBQWUzRCxFQUFRLFNBQVUsQ0FDdkM0RCxZQUFZLEVBQ1pDLElBQUssV0FDSixPQUFPN0QsRUFBTzhELEtBR2hCekIsT0FBT3NCLGVBQWUzRCxFQUFRLEtBQU0sQ0FDbkM0RCxZQUFZLEVBQ1pDLElBQUssV0FDSixPQUFPN0QsRUFBTytELEtBR2hCMUIsT0FBT3NCLGVBQWUzRCxFQUFRLFVBQVcsQ0FDeEM0RCxZQUFZLElBRWI1RCxFQUFPd0QsZ0JBQWtCLEVBRTFCLE9BQU94RCIsImZpbGUiOiIxLndvcmtlci5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIHdhc20gZnJvbSBcIi4vaW5kZXhfYmcud2FzbVwiO1xuZXhwb3J0ICogZnJvbSBcIi4vaW5kZXhfYmcuanNcIjsiLCJpbXBvcnQgKiBhcyB3YXNtIGZyb20gJy4vaW5kZXhfYmcud2FzbSc7XG5cbmNvbnN0IGxUZXh0RGVjb2RlciA9IHR5cGVvZiBUZXh0RGVjb2RlciA9PT0gJ3VuZGVmaW5lZCcgPyAoMCwgbW9kdWxlLnJlcXVpcmUpKCd1dGlsJykuVGV4dERlY29kZXIgOiBUZXh0RGVjb2RlcjtcblxubGV0IGNhY2hlZFRleHREZWNvZGVyID0gbmV3IGxUZXh0RGVjb2RlcigndXRmLTgnLCB7IGlnbm9yZUJPTTogdHJ1ZSwgZmF0YWw6IHRydWUgfSk7XG5cbmNhY2hlZFRleHREZWNvZGVyLmRlY29kZSgpO1xuXG5sZXQgY2FjaGVnZXRVaW50OE1lbW9yeTAgPSBudWxsO1xuZnVuY3Rpb24gZ2V0VWludDhNZW1vcnkwKCkge1xuICAgIGlmIChjYWNoZWdldFVpbnQ4TWVtb3J5MCA9PT0gbnVsbCB8fCBjYWNoZWdldFVpbnQ4TWVtb3J5MC5idWZmZXIgIT09IHdhc20ubWVtb3J5LmJ1ZmZlcikge1xuICAgICAgICBjYWNoZWdldFVpbnQ4TWVtb3J5MCA9IG5ldyBVaW50OEFycmF5KHdhc20ubWVtb3J5LmJ1ZmZlcik7XG4gICAgfVxuICAgIHJldHVybiBjYWNoZWdldFVpbnQ4TWVtb3J5MDtcbn1cblxuZnVuY3Rpb24gZ2V0U3RyaW5nRnJvbVdhc20wKHB0ciwgbGVuKSB7XG4gICAgcmV0dXJuIGNhY2hlZFRleHREZWNvZGVyLmRlY29kZShnZXRVaW50OE1lbW9yeTAoKS5zdWJhcnJheShwdHIsIHB0ciArIGxlbikpO1xufVxuXG5jb25zdCBoZWFwID0gbmV3IEFycmF5KDMyKS5maWxsKHVuZGVmaW5lZCk7XG5cbmhlYXAucHVzaCh1bmRlZmluZWQsIG51bGwsIHRydWUsIGZhbHNlKTtcblxubGV0IGhlYXBfbmV4dCA9IGhlYXAubGVuZ3RoO1xuXG5mdW5jdGlvbiBhZGRIZWFwT2JqZWN0KG9iaikge1xuICAgIGlmIChoZWFwX25leHQgPT09IGhlYXAubGVuZ3RoKSBoZWFwLnB1c2goaGVhcC5sZW5ndGggKyAxKTtcbiAgICBjb25zdCBpZHggPSBoZWFwX25leHQ7XG4gICAgaGVhcF9uZXh0ID0gaGVhcFtpZHhdO1xuXG4gICAgaGVhcFtpZHhdID0gb2JqO1xuICAgIHJldHVybiBpZHg7XG59XG4vKipcbiogQHJldHVybnMge2Jvb2xlYW59XG4qL1xuZXhwb3J0IGZ1bmN0aW9uIGluaXRpYWxpemUoKSB7XG4gICAgdmFyIHJldCA9IHdhc20uaW5pdGlhbGl6ZSgpO1xuICAgIHJldHVybiByZXQgIT09IDA7XG59XG5cbmZ1bmN0aW9uIGdldE9iamVjdChpZHgpIHsgcmV0dXJuIGhlYXBbaWR4XTsgfVxuXG5mdW5jdGlvbiBkcm9wT2JqZWN0KGlkeCkge1xuICAgIGlmIChpZHggPCAzNikgcmV0dXJuO1xuICAgIGhlYXBbaWR4XSA9IGhlYXBfbmV4dDtcbiAgICBoZWFwX25leHQgPSBpZHg7XG59XG5cbmZ1bmN0aW9uIHRha2VPYmplY3QoaWR4KSB7XG4gICAgY29uc3QgcmV0ID0gZ2V0T2JqZWN0KGlkeCk7XG4gICAgZHJvcE9iamVjdChpZHgpO1xuICAgIHJldHVybiByZXQ7XG59XG4vKipcbiogQHJldHVybnMge2FueX1cbiovXG5leHBvcnQgZnVuY3Rpb24gZ2V0VGlsZXMoKSB7XG4gICAgdmFyIHJldCA9IHdhc20uZ2V0VGlsZXMoKTtcbiAgICByZXR1cm4gdGFrZU9iamVjdChyZXQpO1xufVxuXG4vKipcbiogQHJldHVybnMge2FueX1cbiovXG5leHBvcnQgZnVuY3Rpb24gZ2V0VHVybigpIHtcbiAgICB2YXIgcmV0ID0gd2FzbS5nZXRUdXJuKCk7XG4gICAgcmV0dXJuIHRha2VPYmplY3QocmV0KTtcbn1cblxuLyoqXG4qIEBwYXJhbSB7bnVtYmVyfSByb3dcbiogQHBhcmFtIHtudW1iZXJ9IGNvbFxuKiBAcmV0dXJucyB7YW55fVxuKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRQb3NzaWJsZU1vdmVzKHJvdywgY29sKSB7XG4gICAgdmFyIHJldCA9IHdhc20uZ2V0UG9zc2libGVNb3Zlcyhyb3csIGNvbCk7XG4gICAgcmV0dXJuIHRha2VPYmplY3QocmV0KTtcbn1cblxuLyoqXG4qIEBwYXJhbSB7bnVtYmVyfSBmcm9tX3Jvd1xuKiBAcGFyYW0ge251bWJlcn0gZnJvbV9jb2xcbiogQHBhcmFtIHtudW1iZXJ9IHRvX3Jvd1xuKiBAcGFyYW0ge251bWJlcn0gdG9fY29sXG4qL1xuZXhwb3J0IGZ1bmN0aW9uIG1vdmVQYXduKGZyb21fcm93LCBmcm9tX2NvbCwgdG9fcm93LCB0b19jb2wpIHtcbiAgICB3YXNtLm1vdmVQYXduKGZyb21fcm93LCBmcm9tX2NvbCwgdG9fcm93LCB0b19jb2wpO1xufVxuXG4vKipcbiovXG5leHBvcnQgZnVuY3Rpb24gbWFrZUFNb3ZlKCkge1xuICAgIHdhc20ubWFrZUFNb3ZlKCk7XG59XG5cbi8qKlxuKi9cbmV4cG9ydCBjb25zdCBUaWxlID0gT2JqZWN0LmZyZWV6ZSh7IE5vdGhpbmc6MCxSZWRQYXduOjEsUmVkUXVpbjoyLEJsYWNrUGF3bjozLEJsYWNrUXVpbjo0LCB9KTtcblxuZXhwb3J0IGNvbnN0IF9fd2JpbmRnZW5fanNvbl9wYXJzZSA9IGZ1bmN0aW9uKGFyZzAsIGFyZzEpIHtcbiAgICB2YXIgcmV0ID0gSlNPTi5wYXJzZShnZXRTdHJpbmdGcm9tV2FzbTAoYXJnMCwgYXJnMSkpO1xuICAgIHJldHVybiBhZGRIZWFwT2JqZWN0KHJldCk7XG59O1xuXG5leHBvcnQgY29uc3QgX193YmdfbG9nX2M3MDNhNGM3MWRhYzM3MWIgPSBmdW5jdGlvbihhcmcwLCBhcmcxKSB7XG4gICAgY29uc29sZS5sb2coZ2V0U3RyaW5nRnJvbVdhc20wKGFyZzAsIGFyZzEpKTtcbn07XG5cbiIsIm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24ob3JpZ2luYWxNb2R1bGUpIHtcblx0aWYgKCFvcmlnaW5hbE1vZHVsZS53ZWJwYWNrUG9seWZpbGwpIHtcblx0XHR2YXIgbW9kdWxlID0gT2JqZWN0LmNyZWF0ZShvcmlnaW5hbE1vZHVsZSk7XG5cdFx0Ly8gbW9kdWxlLnBhcmVudCA9IHVuZGVmaW5lZCBieSBkZWZhdWx0XG5cdFx0aWYgKCFtb2R1bGUuY2hpbGRyZW4pIG1vZHVsZS5jaGlsZHJlbiA9IFtdO1xuXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShtb2R1bGUsIFwibG9hZGVkXCIsIHtcblx0XHRcdGVudW1lcmFibGU6IHRydWUsXG5cdFx0XHRnZXQ6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRyZXR1cm4gbW9kdWxlLmw7XG5cdFx0XHR9XG5cdFx0fSk7XG5cdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KG1vZHVsZSwgXCJpZFwiLCB7XG5cdFx0XHRlbnVtZXJhYmxlOiB0cnVlLFxuXHRcdFx0Z2V0OiBmdW5jdGlvbigpIHtcblx0XHRcdFx0cmV0dXJuIG1vZHVsZS5pO1xuXHRcdFx0fVxuXHRcdH0pO1xuXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShtb2R1bGUsIFwiZXhwb3J0c1wiLCB7XG5cdFx0XHRlbnVtZXJhYmxlOiB0cnVlXG5cdFx0fSk7XG5cdFx0bW9kdWxlLndlYnBhY2tQb2x5ZmlsbCA9IDE7XG5cdH1cblx0cmV0dXJuIG1vZHVsZTtcbn07XG4iXSwic291cmNlUm9vdCI6IiJ9